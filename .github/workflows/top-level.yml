on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-doc:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/checkout@v4
    - name: Install pip packages
      working-directory: docs
      run: |
        pip install pip --upgrade
        pip install -r requirements.txt --upgrade

    - name: Build doc
      working-directory: docs
      run: |
        export GIT_LFS_TO_LINKS="true"
        export GIT_ORG_REPOSITORY="${{ github.repository }}"
        [ "${{ github.event_name }}" = "pull_request" ] \
          && export GIT_BRANCH="${{ github.event.pull_request.head.ref }}" \
          || export GIT_BRANCH="${{ github.ref_name }}"

        [[ "${{ runner.debug }}" != "1" ]] && j_="-jauto"

        make html SPHINXOPTS="$j_ -W --keep-going"

    - name: Store the generated doc
      uses: actions/upload-artifact@v4
      with:
        name: html
        path: docs/_build/html

  check-doc:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
    - uses: analogdevicesinc/doctools/checkout@action
    - name: Check writing
      run: |
        pip install docutils vale

        check_vale() {
          files=$(git diff --diff-filter=ACM --no-renames --name-only $base_sha..$head_sha -- 'docs/*.rst' 'docs/**/*.rst')

          echo "$1"
          vale sync --config=.github/styles/$1
          [[ -z "$files" ]] && return
          while read file; do
            echo "$file"
            vale --config=.github/styles/$1 --output=JSON  $file |  \
              jq -r 'to_entries[] | .key as $file | .value[] |
              "::\(.Severity) file=\($file),line=\(.Line),col=\(.Span[0])::vale:\(.Check):\($file):\(.Line):\(.Span[0]) \(.Message)"'
          done <<< "$files"
        }

        check_vale vale-spelling.ini
        check_vale vale-enforcement.ini

  deploy:
    runs-on: ubuntu-latest
    needs: [build-doc]
    permissions:
      contents: write
    if: >
      github.ref == 'refs/heads/main' ||
      github.event_name == 'pull_request' ||
      github.ref_type == 'tag'

    steps:
    - uses: analogdevicesinc/doctools/gh-pages-deploy@action
      with:
        new_tag: ${{ github.ref_type == 'tag' }}
        tag: ${{ github.ref_name }}
        name: html

